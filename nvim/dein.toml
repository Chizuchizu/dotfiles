# [[plugins]]  # dein、全ての根幹
# repo = 'Shougo/dein.vim'
# [[plugins]]
# repo = "Shougo/deoplete.nvim"

[[plugins]]  # 括弧やクォーテーションマークの補完
repo = 'Townk/vim-autoclose'


[[plugins]]  # オシャレなカラーテーマ
repo = 'morhetz/gruvbox'
hook_add = '''
  colorscheme gruvbox
'''

[[plugins]]  # Gitの差分表示
repo = 'airblade/vim-gitgutter'
hook_add = '''
  set signcolumn=yes
  set updatetime=1000
  nnoremap [gitgutter] <Nop>
  nmap <C-h> [gitgutter]
  nmap [gitgutter]j <Plug>GitGutterNextHunk
  nmap [gitgutter]k <Plug>GitGutterPrevHunk
  nmap [gitgutter]u <Plug>GitGutterUndoHunk
'''

[[plugins]]  # gitが使える超便利ツール
repo = 'tpope/vim-fugitive'
hook_add = '''
  command Gst :Gstatus
  command Gdf :Gdiff
  command Gbl :Gblame
'''

[[plugins]]  # 魔術（すべての根幹）
repo = 'Shougo/denite.nvim'
hook_add = '''
  nnoremap [denite] <Nop>
  nmap <C-d> [denite]
  nnoremap [denite]g :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
  nnoremap [denite]r :<C-u>Denite -resume -buffer-name=search-buffer-denite<CR>
  nnoremap [denite]p :<C-u>Denite file_rec<CR>
  nnoremap <silent> <space>fr :<C-u>Denite file_mru<CR>
  nnoremap <silent> <space>fb :<C-u>Denite buffer<CR>
  nnoremap <silent> <space>fy :<C-u>Denite neoyank<CR>
  nnoremap <silent> <space>ff :<C-u>Denite file_rec<CR>
  nnoremap <silent> <space>fu :<C-u>Denite outline<CR>
  call denite#custom#option('default', 'prompt', '>')
  call denite#custom#option('_', 'highlight_matched_range', 'None')
  call denite#custom#option('_', 'highlight_matched_char', 'None')
  call denite#custom#map('insert', "<Tab>", '<denite:move_to_next_line>')
  call denite#custom#map('insert', "<S-Tab>", '<denite:move_to_previous_line>')
  call denite#custom#map('insert', "<C-t>", '<denite:do_action:tabopen>')
  call denite#custom#map('insert', "<C-v>", '<denite:do_action:vsplit>')
  call denite#custom#map('normal', "v", '<denite:do_action:vsplit>')
  " call denite#custom#var('file_rec', 'command', ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
  " call denite#custom#var('grep', 'command', ['ag'])
  " call denite#custom#var('grep', 'recursive_opts', [])
  " call denite#custom#var('grep', 'pattern_opt', [])
  " call denite#custom#var('grep', 'default_opts', ['--follow', '--no-group', '--no-color'])
  " call denite#custom#map('normal', '<C-j>', '<denite:do_action:split>', 'noremap')
  " call denite#custom#map('insert', '<C-j>', '<denite:do_action:split>', 'noremap')
  " call denite#custom#map('normal', '<C-l>', '<denite:do_action:vsplit>', 'noremap')
  " call denite#custom#map('insert', '<C-l>', '<denite:do_action:vsplit>', 'noremap')

  let s:denite_win_width_percent = 0.85
  let s:denite_win_height_percent = 0.7

  " Change denite default options
  call denite#custom#option('default', {
      \ 'split': 'floating',
      \ 'winwidth': float2nr(&columns * s:denite_win_width_percent),
      \ 'wincol': float2nr((&columns - (&columns * s:denite_win_width_percent)) / 2),
      \ 'winheight': float2nr(&lines * s:denite_win_height_percent),
      \ 'winrow': float2nr((&lines - (&lines * s:denite_win_height_percent)) / 2),
      \ })   
  " 横割りオープンを`<C-S>`
  call denite#custom#map('insert', '<C-S>', '<denite:do_action:split>') 
  " 縦割りオープンを`<C-I>`
  call denite#custom#map('insert', '<C-I>', '<denite:do_action:vsplit>')
  " タブオープンを`<C-O>`
  call denite#custom#map('insert', '<C-O>', '<denite:do_action:tabopen>')


    augroup denite_filter
      autocmd FileType denite call s:denite_my_settings()
      function! s:denite_my_settings() abort
        nnoremap <silent><buffer><expr> <CR>
        \ denite#do_map('do_action')
        nnoremap <silent><buffer><expr> d
        \ denite#do_map('do_action', 'delete')
        nnoremap <silent><buffer><expr> p
        \ denite#do_map('do_action', 'preview')
        nnoremap <silent><buffer><expr> q
        \ denite#do_map('quit')
        nnoremap <silent><buffer><expr> i
        \ denite#do_map('open_filter_buffer')
        nnoremap <silent><buffer><expr> <Space>
        \ denite#do_map('toggle_select').'j'
      endfunction
    augroup END

    " use floating
    let s:denite_win_width_percent = 0.85
    let s:denite_win_height_percent = 0.7
    let s:denite_default_options = {
        \ 'split': 'floating',
        \ 'winwidth': float2nr(&columns * s:denite_win_width_percent),
        \ 'wincol': float2nr((&columns - (&columns * s:denite_win_width_percent)) / 2),
        \ 'winheight': float2nr(&lines * s:denite_win_height_percent),
        \ 'winrow': float2nr((&lines - (&lines * s:denite_win_height_percent)) / 2),
        \ 'highlight_filter_background': 'DeniteFilter',
        \ 'prompt': '$ ',
        \ 'start_filter': v:true,
        \ }
    let s:denite_option_array = []
    for [key, value] in items(s:denite_default_options)
      call add(s:denite_option_array, '-'.key.'='.value)
    endfor
    call denite#custom#option('default', s:denite_default_options)

    call denite#custom#var('file/rec', 'command',
        \ ['ag', '--follow', '--nocolor', '--nogroup', '-g', ''])
    call denite#custom#filter('matcher/ignore_globs', 'ignore_globs',
        \ [ '.git/', '.ropeproject/', '__pycache__/',
        \   'venv/', 'images/', '*.min.*', 'img/', 'fonts/'])
    " Ag command on grep source
    call denite#custom#var('grep', 'command', ['ag'])
    call denite#custom#var('grep', 'default_opts', ['-i', '--vimgrep'])
    call denite#custom#var('grep', 'recursive_opts', [])
    call denite#custom#var('grep', 'pattern_opt', [])
    call denite#custom#var('grep', 'separator', ['--'])
    call denite#custom#var('grep', 'final_opts', [])
    " grep
    command! -nargs=? Dgrep call s:Dgrep(<f-args>)
    function s:Dgrep(...)
      if a:0 > 0
        execute(':Denite -buffer-name=grep-buffer-denite grep -path='.a:1)
      else
        execute(':Denite -buffer-name=grep-buffer-denite '.join(s:denite_option_array, ' ').' grep')
      endif
    endfunction
    " show Denite grep results
    command! Dresume execute(':Denite -resume -buffer-name=grep-buffer-denite '.join(s:denite_option_array, ' ').'')
    " next Denite grep result
    command! Dnext execute(':Denite -resume -buffer-name=grep-buffer-denite -cursor-pos=+1 -immediately '.join(s:denite_option_array, ' ').'')
    " previous Denite grep result
    command! Dprev execute(':Denite -resume -buffer-name=grep-buffer-denite -cursor-pos=-1 -immediately '.join(s:denite_option_array, ' ').'')
    " keymap
    call denite#custom#map('insert', '<C-n>', '<denite:move_to_next_line>', 'noremap')
    call denite#custom#map('insert', '<C-p>', '<denite:move_to_previous_line>', 'noremap')
'''

[[plugins]]  # file_mru
repo = 'Shougo/neomru.vim'
[[plugins]]  # yank履歴
repo = 'Shougo/neoyank.vim'


[[plugins]]  # 検索位置を表示
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  nmap n <Plug>(anzu-n-with-echo)
  nmap N <Plug>(anzu-N-with-echo)
  nmap * <Plug>(anzu-star)
  nmap # <Plug>(anzu-sharp)
'''


[[plugins]]
repo = "davidhalter/jedi-vim"
on_ft = ['python']

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
    let g:winrisizer_vert_resize=1
    let g:winresizer_horiz_resize=1
'''


[[plugins]]  # 言語の欲張りセット
repo = "sheerun/vim-polyglot"
hook_add = '''
  let g:polyglot_disabled = ["markdown"]
'''

[[plugins]]
repo = "junegunn/vim-easy-align"
hook_add = '''
  "" vim-easy-align
  xmap ga <Plug>(EasyAlign)
  nmap ga <Plug>(EasyAlign)

'''

[[plugins]]  # airlineのかわり
repo = "itchyny/lightline.vim"
hook_add = '''
  set laststatus=2
  set showmode
  set showcmd
  set ruler
'''

[[plugins]]  # インデントの可視化
repo = "Yggdroot/indentLine"



